package com.zaxxer.hikari.performance;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
/** 
 * @author Brett Wooldridge
 */
public class StubStatement implements Statement {
  private boolean closed;
  /** 
 * {@inheritDoc} 
 */
  public <T>T unwrap(  Class<T> iface) throws SQLException {
    return null;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean isWrapperFor(  Class<?> iface) throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public ResultSet executeQuery(  String sql) throws SQLException {
    return new StubResultSet();
  }
  /** 
 * {@inheritDoc} 
 */
  public int executeUpdate(  String sql) throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public void close() throws SQLException {
    closed=true;
  }
  /** 
 * {@inheritDoc} 
 */
  public int getMaxFieldSize() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public void setMaxFieldSize(  int max) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public int getMaxRows() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public void setMaxRows(  int max) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public void setEscapeProcessing(  boolean enable) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public int getQueryTimeout() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public void setQueryTimeout(  int seconds) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public void cancel() throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public SQLWarning getWarnings() throws SQLException {
    return null;
  }
  /** 
 * {@inheritDoc} 
 */
  public void clearWarnings() throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public void setCursorName(  String name) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean execute(  String sql) throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public ResultSet getResultSet() throws SQLException {
    return new StubResultSet();
  }
  /** 
 * {@inheritDoc} 
 */
  public int getUpdateCount() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean getMoreResults() throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public void setFetchDirection(  int direction) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public int getFetchDirection() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public void setFetchSize(  int rows) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public int getFetchSize() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public int getResultSetConcurrency() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public int getResultSetType() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public void addBatch(  String sql) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public void clearBatch() throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public int[] executeBatch() throws SQLException {
    return null;
  }
  /** 
 * {@inheritDoc} 
 */
  public Connection getConnection() throws SQLException {
    return null;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean getMoreResults(  int current) throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public ResultSet getGeneratedKeys() throws SQLException {
    return new StubResultSet();
  }
  /** 
 * {@inheritDoc} 
 */
  public int executeUpdate(  String sql,  int autoGeneratedKeys) throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public int executeUpdate(  String sql,  int[] columnIndexes) throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public int executeUpdate(  String sql,  String[] columnNames) throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean execute(  String sql,  int autoGeneratedKeys) throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean execute(  String sql,  int[] columnIndexes) throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean execute(  String sql,  String[] columnNames) throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public int getResultSetHoldability() throws SQLException {
    return 0;
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean isClosed() throws SQLException {
    return closed;
  }
  /** 
 * {@inheritDoc} 
 */
  public void setPoolable(  boolean poolable) throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean isPoolable() throws SQLException {
    return false;
  }
  /** 
 * {@inheritDoc} 
 */
  public void closeOnCompletion() throws SQLException {
  }
  /** 
 * {@inheritDoc} 
 */
  public boolean isCloseOnCompletion() throws SQLException {
    return false;
  }
  public StubStatement(){
  }
}
